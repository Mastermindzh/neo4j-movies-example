services:
  movies-and-tv-neo4j:
    image: neo4j:5-community
    restart: unless-stopped
    environment:
      NEO4J_AUTH: ${NEO4J_USERNAME}/${NEO4J_PASSWORD}
      NEO4J_server_memory_heap_initial__size: ${NEO4J_HEAP_INITIAL_SIZE}
      NEO4J_server_memory_heap_max__size: ${NEO4J_HEAP_MAX_SIZE}
      NEO4J_server_memory_pagecache_size: ${NEO4J_PAGECACHE_SIZE}
      NEO4J_server_default__listen__address: 0.0.0.0
      NEO4J_server_bolt_listen__address: 0.0.0.0:7687
      NEO4J_server_http_listen__address: 0.0.0.0:7474
      NEO4J_ACCEPT_LICENSE_AGREEMENT: yes
    volumes:
      - ${APP_DATA}/neo4j/movies-and-tv/data:/data
      - ${APP_DATA}/neo4j/movies-and-tv/logs:/logs
      - ${APP_DATA}/neo4j/movies-and-tv/import:/var/lib/neo4j/import
      - ${APP_DATA}/neo4j/movies-and-tv/plugins:/plugins
    ports:
      - 7474:7474
      - 7473:7473
      - 7687:7687

  movies-and-tv-seed:
    image: neo4j:5-community
    depends_on:
      - movies-and-tv-neo4j
    environment:
      NEO4J_PASSWORD: ${NEO4J_PASSWORD}
      INSTANCE_NAME: "movies-and-tv"
      DATASET_NAME: "Harry Potter movies and TV shows"
      CYPHER_FILE: "/var/lib/neo4j/scripts/movie-data.cypher"
    volumes:
      - ./seed.sh:/tmp/seed.sh:ro
      - ./instances/movies-and-tv/movie-data.cypher:/tmp/movie-data.cypher:ro
    command: /bin/bash -c "mkdir -p /var/lib/neo4j/scripts && cp /tmp/movie-data.cypher /var/lib/neo4j/scripts/ && bash /tmp/seed.sh"
    restart: "no"

  # Example: Adding a second instance is now trivial - just different env vars!
  # science-neo4j:
  #   image: neo4j:5-community
  #   restart: unless-stopped
  #   environment:
  #     NEO4J_AUTH: ${NEO4J_USERNAME}/${NEO4J_PASSWORD}
  #     # ... other neo4j config
  #   volumes:
  #     - ${APP_DATA}/neo4j/science/data:/data
  #     # ... other volumes
  #   ports:
  #     - 7475:7474  # Different port
  #     - 7688:7687  # Different port
  #
  # science-seed:
  #   image: neo4j:5-community
  #   depends_on:
  #     - science-neo4j
  #   environment:
  #     NEO4J_PASSWORD: ${NEO4J_PASSWORD}
  #     INSTANCE_NAME: "science"
  #     DATASET_NAME: "Scientific Research Data"
  #     CYPHER_FILE: "/var/lib/neo4j/scripts/science-data.cypher"
  #   volumes:
  #     - ./seed.sh:/tmp/seed.sh:ro
  #     - ./instances/science/science-data.cypher:/tmp/science-data.cypher:ro
  #   command: /bin/bash -c "mkdir -p /var/lib/neo4j/scripts && cp /tmp/science-data.cypher /var/lib/neo4j/scripts/ && bash /tmp/seed.sh"
  #   restart: "no"
